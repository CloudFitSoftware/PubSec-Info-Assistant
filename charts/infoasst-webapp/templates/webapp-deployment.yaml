apiVersion: apps/v1
kind: Deployment
metadata:
  name: infoasst-webapp
  namespace: infoasst
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infoasst-webapp
  template:
    metadata:
      labels:
        app: infoasst-webapp
    spec:
      containers:
      - name: infoasst-webapp
        image: {{ .Values.images.webapp.repository }}:{{ .Values.images.webapp.label }}
        env:
          - name: AZURE_BLOB_STORAGE_ACCOUNT
            value: "{{ .Values.webapp.env.azureblobstorageaccount }}"
          - name: AZURE_BLOB_STORAGE_CONTAINER
            value: "{{ .Values.webapp.env.azureblobstoragecontainer }}"
          - name: AZURE_BLOB_STORAGE_ENDPOINT
            value: "{{ .Values.webapp.env.azureblobstorageendpoint }}"
          - name: AZURE_BLOB_STORAGE_UPLOAD_CONTAINER
            value: "{{ .Values.webapp.env.azureblobstorageuploadcontainer }}"
          - name: AZURE_KEY_VAULT_ENDPOINT
            value: "{{ .Values.webapp.env.azurekeyvaultendpoint }}"
          - name: AZURE_KEYVAULT_NAME
            value: "{{ .Values.webapp.env.azurekeyvaultname }}"
          - name: AZURE_OPENAI_CHATGPT_DEPLOYMENT
            value: "{{ .Values.webapp.env.azureopenaichatgptdeployment }}"
          - name: AZURE_OPENAI_CHATGPT_MODEL_NAME
            value: "{{ .Values.webapp.env.azureopenaichatgptmodelname }}"
          - name: AZURE_OPENAI_CHATGPT_MODEL_VERSION
            value: "{{ .Values.webapp.env.azureopenatchatgptmodelversion }}"
          - name: AZURE_OPENAI_EMBEDDINGS_MODEL_NAME
            value: "{{ .Values.webapp.env.azureopenaiembeddingsmodelname }}"
          - name: AZURE_OPENAI_EMBEDDINGS_MODEL_VERSION
            value: "{{ .Values.webapp.env.azureopenaiembeddingsmodelversion }}"
          - name: AZURE_OPENAI_RESOURCE_GROUP
            value: "{{ .Values.webapp.env.azureopenairesourcegroup }}"
          - name: AZURE_OPENAI_SERVICE
            value: "{{ .Values.webapp.env.azureopenaiservice }}"
          - name: AZURE_SEARCH_INDEX
            value: "{{ .Values.webapp.env.azuresearchindex }}"
          - name: AZURE_SEARCH_SERVICE
            value: "{{ .Values.webapp.env.azuresearchservice }}"
          - name: AZURE_SEARCH_SERVICE_ENDPOINT
            value: "{{ .Values.webapp.env.azuresearchserviceendpoint }}"
          - name: AZURE_SUBSCRIPTION_ID
            value: "{{ .Values.webapp.env.azuresubscriptionid }}"
          - name: AZURE_TENANT_ID
            value: "{{ .Values.webapp.env.azuretenantid }}"
          - name: CHAT_WARNING_BANNER_TEXT
            value: "{{ .Values.webapp.env.chatwarningbannertext }}"
          - name: COSMOSDB_LOG_CONTAINER_NAME
            value: "{{ .Values.webapp.env.cosmosdblogcontainername }}"
          - name: COSMOSDB_LOG_DATABASE_NAME
            value: "{{ .Values.webapp.env.cosmosdblogdatabasename }}"
          - name: COSMOSDB_TAGS_CONTAINER_NAME
            value: "{{ .Values.webapp.env.cosmosdbtagscontainername }}"
          - name: COSMOSDB_TAGS_DATABASE_NAME
            value: "{{ .Values.webapp.env.cosmosdbtagsdatabasename }}"
          - name: COSMOSDB_URL
            value: "{{ .Values.webapp.env.cosmosdburl }}"
          - name: EMBEDDING_DEPLOYMENT_NAME
            value: "{{ .Values.webapp.env.embeddingdeploymentname }}"
          - name: ENABLE_ORYX_BUILD
            value: "{{ .Values.webapp.env.enableoryxbuild }}"
          - name: ENRICHMENT_APPSERVICE_NAME
            value: "{{ .Values.webapp.env.enrichmentappservicename }}"
          - name: IS_GOV_CLOUD_DEPLOYMENT
            value: "{{ .Values.webapp.env.isgovclouddeployment }}"
          - name: QUERY_TERM_LANGUAGE
            value: "{{ .Values.webapp.env.querytermlanguage }}"
          - name: SCM_DO_BUILD_DURING_DEPLOYMENT
            value: "{{ .Values.webapp.env.scmdobuildduringdeployment }}"
          - name: TARGET_EMBEDDINGS_MODEL
            value: "{{ .Values.webapp.env.targetembeddingsmodel }}"
          - name: USE_AZURE_OPENAI_EMBEDDINGS
            value: "{{ .Values.webapp.env.useazureopenaiembeddings }}"
          - name: WEBSITE_HTTPLOGGING_RETENTION_DAYS
            value: "{{ .Values.webapp.env.websitehttploggingretentiondays }}"
        resources:
          limits:
            memory: "256Mi"
            cpu: "250m"
        ports:
          - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: infoasst-webapp
  namespace: infoasst
  annotations:
    service.beta.kubernetes.io/azure-pip-name: {{ .Values.webapp.service.pipname }}
    service.beta.kubernetes.io/azure-load-balancer-resource-group: {{ .Values.webapp.service.pipresourcegroup }}
spec:
  type: LoadBalancer
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    app: infoasst-webapp


