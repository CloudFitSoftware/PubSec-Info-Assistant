apiVersion: apps/v1
kind: Deployment
metadata:
  name: infoasst-webapp
  namespace: infoasst
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infoasst-webapp
  template:
    metadata:
      labels:
        app: infoasst-webapp
    spec:
      containers:
      - name: infoasst-webapp
        image: {{ .Values.images.webapp.repository }}:{{ .Values.images.webapp.label }}
        env:
          - name: AZURE_BLOB_STORAGE_ACCOUNT
            value: "{{ .Values.webapp.env.azureblobstorageaccount }}"
          - name: AZURE_BLOB_STORAGE_CONTAINER
            value: "{{ .Values.webapp.env.azureblobstoragecontainer }}"
          - name: AZURE_BLOB_STORAGE_ENDPOINT
            value: "{{ .Values.webapp.env.azureblobstorageendpoint }}"
          - name: AZURE_BLOB_STORAGE_UPLOAD_CONTAINER
            value: "{{ .Values.webapp.env.azureblobstorageuploadcontainer }}"
          - name: AZURE_KEY_VAULT_ENDPOINT
            value: "{{ .Values.webapp.env.azurekeyvaultendpoint }}"
          - name: AZURE_KEYVAULT_NAME
            value: "{{ .Values.webapp.env.azurekeyvaultendpoint }}"
          - name: AZURE_OPENAI_CHATGPT_DEPLOYMENT
            value: "{{ .Values.webapp.env.azureopenaichatgptdeployment }}"
          - name: AZURE_OPENAI_CHATGPT_MODEL_NAME
            value: "{{ .Values.webapp.env.azureopenaichatgptmodelname }}"
          - name: AZURE_OPENAI_CHATGPT_MODEL_VERSION
            value: "{{ .Values.webapp.env.azureopenatchatgptmodelversion }}"
          - name: AZURE_OPENAI_EMBEDDINGS_MODEL_NAME
            value: "{{ .Values.webapp.env.azureopenaiembeddingsmodelname }}"
          - name: AZURE_OPENAI_EMBEDDINGS_MODEL_VERSION
            value: "{{ .Values.webapp.env.azureopenaiembeddingsmodelversion }}"
          - name: AZURE_OPENAI_RESOURCE_GROUP
            value: "{{ .Values.webapp.env.azureopenairesourcegroup }}"
          - name: AZURE_OPENAI_SERVICE
            value: "{{ .Values.webapp.env.azureopenaiservice }}"
          - name: AZURE_SEARCH_INDEX
            value: "{{ .Values.webapp.env.azuresearchindex }}"
          - name: AZURE_SEARCH_SERVICE
            value: "{{ .Values.webapp.env.azuresearchservice }}"
          - name: AZURE_SEARCH_SERVICE_ENDPOINT
            value: "{{ .Values.webapp.env.azuresearchserviceendpoint }}"
          - name: AZURE_SUBSCRIPTION_ID
            value: "{{ .Values.webapp.env.azuresubscriptionid }}"
          - name: AZURE_TENANT_ID
            value: "{{ .Values.webapp.env.azuretenantid }}"
          - name: CHAT_WARNING_BANNER_TEXT
            value: "{{ .Values.webapp.env.chatwarningbannertext }}"
          - name: COSMOSDB_LOG_CONTAINER_NAME
            value: "{{ .Values.webapp.env.cosmosdblogcontainername }}"
          - name: COSMOSDB_LOG_DATABASE_NAME
            value: "{{ .Values.webapp.env.cosmosdblogdatabasename }}"
          - name: COSMOSDB_URL
            value: "{{ .Values.webapp.env.cosmosdburl }}"
          - name: EMBEDDING_DEPLOYMENT_NAME
            value: "{{ .Values.webapp.env.embeddingdeploymentname }}"
          - name: ENABLE_ORYX_BUILD
            value: "{{ .Values.webapp.env.enableoryxbuild }}"
          - name: ENRICHMENT_APPSERVICE_NAME
            value: "{{ .Values.webapp.env.enrichmentappservicename }}"
          - name: CONTAINERIZED_APP_SERVICES
            value: "{{ .Values.webapp.env.containerizedappservices }}"
          - name: QUERY_TERM_LANGUAGE
            value: "{{ .Values.webapp.env.querytermlanguage }}"
          - name: SCM_DO_BUILD_DURING_DEPLOYMENT
            value: "{{ .Values.webapp.env.scmdobuildduringdeployment }}"
          - name: TARGET_EMBEDDINGS_MODEL
            value: "{{ .Values.webapp.env.targetembeddingsmodel }}"
          - name: USE_AZURE_OPENAI_EMBEDDINGS
            value: "{{ .Values.webapp.env.useazureopenaiembeddings }}"
          - name: WEBSITE_HTTPLOGGING_RETENTION_DAYS
            value: "{{ .Values.webapp.env.websitehttploggingretentiondays }}"
          - name: WEAVIATE_URL
            value: "{{ .Values.webapp.env.weaviateUrl }}"
          - name: DISCONNECTED_AI
            value: "{{ .Values.webapp.env.disconnectedAi }}"
          - name: AZURE_ARM_MANAGEMENT_API
            value: "{{ .Values.webapp.env.azurearmmanagementapi }}"
          - name: AZURE_LOCATION
            value: "{{ .Values.webapp.env.azurelocation }}"
          - name: AZURE_AI_TRANSLATION_DOMAIN
            value: "{{ .Values.webapp.env.azureaitranslationdomain }}"
          - name: AZURE_OPENAI_ENDPOINT
            value: "{{ .Values.webapp.env.azureopenaiendpoint }}"
          - name: USE_SEMANTIC_RERANKER
            value: "{{ .Values.webapp.env.usesemanticreranker }}"
          - name: ENTRA_ID_CLIENT_ID
            value: "{{ .Values.webapp.env.entraIdClientId }}"
          - name: ENTRA_ID_CLIENT_SECRET
            value: "{{ .Values.webapp.env.entraIdClientSecret }}"
          - name: APP_DOMAIN
            value: "{{ .Values.webapp.env.appDomain }}"
          - name: AZURE_OPENAI_AUTHORITY_HOST
            value: "{{ .Values.webapp.env.authorityHost }}"
        resources:
          limits:
            memory: "4G"
            cpu: "250m"
        ports:
          - containerPort: 5050
---
apiVersion: v1
kind: Service
metadata:
  name: infoasst-webapp
  namespace: infoasst
spec:
  type: ClusterIP
  ports:
  - name: "80"
    port: 80
    targetPort: 5050
  selector:
    app: infoasst-webapp
---
# istio-gateway.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - "*"
    port:
      number: 80
      name: http
      protocol: HTTP
    tls: 
      httpsRedirect: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: istio
  name: infoasst-webapp
  namespace: infoasst
spec:
  tls:
    - hosts:
        - infoasst.{{ .Values.webapp.env.randomString }}.{{ .Values.webapp.env.topLevelDomain }}
      secretName: infoasst-tls-cert
  rules:
    - host: infoasst.{{ .Values.webapp.env.randomString }}.{{ .Values.webapp.env.topLevelDomain }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: infoasst-webapp
              port:
                number: 80